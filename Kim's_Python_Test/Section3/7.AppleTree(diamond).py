"""
사과나무(다이아몬드)
현수의 농장은 N*N 격자판으로 이루어져 있으며, 각 격자안에는 한 그루의 사과나무가 심어저 있다.
N의 크기는 항상 홀수이다.
가을이 되어 사과를 수확해야 하는데 현수는 격자판안의 사 과를 수확할 때 다이아몬드 모양의 격자판만 수확하고 나머지 격자안의 사과는 새들을 위해서 남겨놓는다.
만약 N이 5이면 아래 그림과 같이 진한 부분의 사과를 수확한다.

현수과 수확하는 사과의 총 개수를 출력하세요.

▣ 입력설명
첫 줄에 자연수 N(홀수)이 주어진다.(3<=N<=20)
두 번째 줄부터 N줄에 걸쳐 각 줄에 N개의 자연수가 주어진다.
이 자연수는 각 격자안에 있는 사과나무에 열린 사과의 개수이다.
각 격자안의 사과의 개수는 100을 넘지 않는다.

▣ 출력설명
수확한 사과의 총 개수를 출력합니다.

▣ 입력예제
5
10 13 10 12 15
12 39 30 23 11
11 25 50 53 15
19 27 29 37 27
19 13 30 13 19

▣ 출력예제
379

"""

n = int(input())
listN = [list(map(int, input().split())) for _ in range(n)]
res = 0
s = e = n // 2

for i in range(n):
    for j in range(s, e + 1):
        res += listN[i][j]
    if i < n // 2:
        s -= 1
        e += 1
    else:
        s += 1
        e -= 1

print(res);
'''

n = int(input())
listN = [list(map(int, input().split())) for _ in range(n)]
#고정으로 받는 입력


# 중간 지점을 몫으로 받음 반복문의 경우 0부터 시작해서 몫으로만 받아도 충분
middleFlagNum = n // 2
res = 0
s=e=n//2 # 중간지점 플래그를 두개를 받음


for i in range(n): #반복문을 돔
    for j in range(s, e+1): #중간값 돌고 끝
        res += n[i][j]
# for 문은 0부터 시작하니까 첫바뀌때 중간값에서 -1 두번째 바퀴때 중간값에서 -2 ex) 5인경우 중간이 2 -> 1(첫바퀴), 1->0(두번째), 0-1(세번쨰), 1->2(네번쨰)
# 다섯번째는 값의 증감이 의미가 없음 이미 연산처리는 다함 다섯번쨰 2 -> 3의 값의 증감은 후연산에 사용되지 않기 때문에 의미 없다.
    if i < n//2 : 
        s-=1
        e+=1
    else: # 중간 값 넘어간 상황에서 값을 줄여줌
        s+=1
        e-=1



'''
